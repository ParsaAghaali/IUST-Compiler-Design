# Generated from C:/PHD_Projects/Example_DSL/grammar/ExampleDSL.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,10,87,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
        1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,
        3,1,3,1,3,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,7,1,7,4,7,61,
        8,7,11,7,12,7,62,1,7,5,7,66,8,7,10,7,12,7,69,9,7,3,7,71,8,7,1,8,
        4,8,74,8,8,11,8,12,8,75,1,8,1,8,1,9,1,9,1,9,1,9,3,9,84,8,9,1,9,1,
        9,0,0,10,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,1,0,3,1,0,
        49,57,1,0,48,57,3,0,9,9,13,13,32,32,92,0,1,1,0,0,0,0,3,1,0,0,0,0,
        5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,
        1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,1,21,1,0,0,0,3,29,1,0,0,0,5,34,
        1,0,0,0,7,42,1,0,0,0,9,48,1,0,0,0,11,50,1,0,0,0,13,56,1,0,0,0,15,
        70,1,0,0,0,17,73,1,0,0,0,19,83,1,0,0,0,21,22,5,111,0,0,22,23,5,117,
        0,0,23,24,5,116,0,0,24,25,5,112,0,0,25,26,5,117,0,0,26,27,5,116,
        0,0,27,28,5,58,0,0,28,2,1,0,0,0,29,30,5,104,0,0,30,31,5,116,0,0,
        31,32,5,109,0,0,32,33,5,108,0,0,33,4,1,0,0,0,34,35,5,99,0,0,35,36,
        5,111,0,0,36,37,5,110,0,0,37,38,5,115,0,0,38,39,5,111,0,0,39,40,
        5,108,0,0,40,41,5,101,0,0,41,6,1,0,0,0,42,43,5,103,0,0,43,44,5,97,
        0,0,44,45,5,109,0,0,45,46,5,101,0,0,46,47,5,58,0,0,47,8,1,0,0,0,
        48,49,5,88,0,0,49,10,1,0,0,0,50,51,5,98,0,0,51,52,5,111,0,0,52,53,
        5,109,0,0,53,54,5,98,0,0,54,55,5,58,0,0,55,12,1,0,0,0,56,57,5,44,
        0,0,57,14,1,0,0,0,58,71,5,48,0,0,59,61,7,0,0,0,60,59,1,0,0,0,61,
        62,1,0,0,0,62,60,1,0,0,0,62,63,1,0,0,0,63,67,1,0,0,0,64,66,7,1,0,
        0,65,64,1,0,0,0,66,69,1,0,0,0,67,65,1,0,0,0,67,68,1,0,0,0,68,71,
        1,0,0,0,69,67,1,0,0,0,70,58,1,0,0,0,70,60,1,0,0,0,71,16,1,0,0,0,
        72,74,7,2,0,0,73,72,1,0,0,0,74,75,1,0,0,0,75,73,1,0,0,0,75,76,1,
        0,0,0,76,77,1,0,0,0,77,78,6,8,0,0,78,18,1,0,0,0,79,84,5,10,0,0,80,
        81,5,13,0,0,81,84,5,10,0,0,82,84,5,13,0,0,83,79,1,0,0,0,83,80,1,
        0,0,0,83,82,1,0,0,0,84,85,1,0,0,0,85,86,6,9,0,0,86,20,1,0,0,0,6,
        0,62,67,70,75,83,1,6,0,0
    ]

class ExampleDSLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    INTEGER = 8
    WS = 9
    NEWLINE = 10

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'output:'", "'html'", "'console'", "'game:'", "'X'", "'bomb:'", 
            "','" ]

    symbolicNames = [ "<INVALID>",
            "INTEGER", "WS", "NEWLINE" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "INTEGER", "WS", "NEWLINE" ]

    grammarFileName = "ExampleDSL.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


